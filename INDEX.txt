
     ***** MODULE *****

  Introduction
Consider a scenario where parts of JavaScript code need to be reused. ES6 comes to your 
rescue with the concept of Modules.
A module organizes a related set of JavaScript code. A module can contain variables and 
functions. A module is nothing more than a chunk of JavaScript code written in a file.
By default, variables and functions of a module are not available for use. Variables and 
functions within a module should be exported so that they can be accessed from within 
other files. Modules in ES6 work only in strict mode. This means variables or functions 
declared in a module will not be accessible globally.
Exporting a Module
The export keyword can be used to export components in a module. Exports in a module 
can be classified as follows:
 Named Exports 
 Default Exports
Named Exports
Named exports are distinguished by their names. There can be several named exports in 
a module. A module can export selected components using the syntax given below:
Syntax 1
//using multiple export keyword
export component1
export component2
...
...
export componentN
Syntax 2
Alternatively, components in a module can also be exported using a 
single export keyword with {} binding syntax as shown below:
//using single export keyword
export {component1,component2,....,componentN}


